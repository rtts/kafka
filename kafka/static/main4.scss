$small: 600px;

@font-face {
  font-family: 'Entrails BB';
  src: url('EntrailsBB.otf') format('opentype');
//       url('entrailsbb-webfont.woff2') format('woff2'),
//       url('entrailsbb-webfont.woff') format('woff'),
//       url('entrailsbb-webfont.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

body {
  background: #ffda00;
  font-family: Arial, sans-serif;
  margin: 3em;
  line-height: 1.35;

  @media(max-width: $small) {
    margin: 10px;
  }
}

h1 {
  letter-spacing: 2px;
  font-size: 1.5em;
  text-align: center;
  text-transform: uppercase;
  font-weight: normal;
  font-style: italic;
}

h2 {
  font-size: 1em;
}

a {
  color: inherit;
}

time {
  font-style: italic;
}

img {
  border: none;
}

blockquote {
  font-style: italic;
  margin: 0;
  padding: 0;
}

header {
  padding: 20px 0;
  text-align: center;
  font-family: "Entrails BB";
  font-size: 10em;
  letter-spacing: 5px;
  transform: scaleX(0.9);
  line-height: 1;
  a {
    text-decoration: none;
  }
  @media(max-width: $small) {
    font-size: 25vw;
  }
}

main {
  display: flex;
  margin: -3em;
  margin-bottom: 0;
  overflow: hidden;

  > section {
    margin: 3em;
    flex: 1 1 0;
  }

  @media(max-width: $small) {
    display: block;
    margin: 0;
    section {
      margin: 0;
    }
  }
}

section.left {
  p {
    font-size: 1.25em;
  }
}

section.session {
  margin-bottom: 2em;
}

footer {
  color: #888;
}

$width: 80px;
$height: 80px;

div.horizontal, div.vertical {
  position: fixed;
  top: -5px;
  left: 0;

  img {
    width: $width;
    transform: scale(1.5);
    @media(max-width: $small) {
      transform: scale(1);
    }
  }
}

div.horizontal {
  animation: topbottom linear infinite alternate;
}

div.vertical {
  animation: leftright linear infinite alternate;
}

$max: 30000;
$min: 10000;

div.h4, div.h5, div.h6, div.h7, div.h8, div.h9 {
  @media(max-width: $small) {
    display: none;
  }
}

div.v1 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v2 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v3 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v4 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v5 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v6 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v7 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v8 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.v9 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h1 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h2 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h3 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h4 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h5 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h6 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h7 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h8 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}
div.h9 {
  animation-delay: 0 - ($min + random($max - $min)) + ms;
  animation-duration: $min + random($max - $min) + ms;
}


@keyframes topbottom {
  to {
    transform: translateY(calc(100vh - #{$height}));
  }
}
@keyframes leftright {
  to {
    transform: translateX(calc(100vw - #{$width}));
  }
}
